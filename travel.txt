=> Travel Application

- Trekking Destination
- Routes
- Costs

- User after login => can add new trekking routes information 
- All Users -> Trekking information


Features:

- Registration/Login
- Trek Routes
	- Search/View
	- Upvote [Login]
	- Add/Update [Login]

Platforms:
- Web
- Mobile

Features - Detailed:

- Registration: User

	=> Create a new User with
		id => Auto Increment
		full_name => Pratik Poudel
		address => Banepa
		email => pratik@gmail.com
		phone_number => 9860670235
		password => pratik@123

	User => json
	User.create()
	=> INSERT INTO `users` (`id`, `full_name`, `address`, `email`, `phone_number`, `password`) VALUES (NULL, 'Pratik Poudel', 'Banepa', 'pratik@gmail.com', '9860670235', 'pratik@123');

- Login: User

	=> Check if email/password match

	=> SELECT * FROM `users` WHERE `email` = 'pratik@gmail.com' and `password` = 'pratik@123';

- View all Trek Destinations: TrekDestination

	=> View all Trek Destinations
		- Id
		- Title
		- Days
		- Difficulty
		- Total Cost
		- Upvotes
		- User: Full Name

	=> SELECT td.id as 'SNO', td.title as 'Title', td.days as 'Days', td.difficulty as 'Difficulty', td.total_cost as 'Total Cost', td.upvotes as 'Upvotes', u.full_name as 'Full Name' FROM `trek_destinations` as td join `users` as u on td.user_id = u.id;

- View Trek Destination details
	=> View Trek Destination detail
		- Id
		- Title
		- Days
		- Difficulty
		- Total Cost
		- Upvotes
		- User: Full Name
		- User: Email
		- Iternaries

	=> SELECT * from `iternaries` as it join `trek_destinations` as td on it.trek_destination_id = td.id join `users` as u on td.user_id = u.id where td.id = 1;

- Search for Trek Destinations: TrekDestination
	
	=> Search based on title

	=> SELECT * FROM `trek_destinations` where title like '%L%';


- Add new Trek Destination: TrekDestination
- Update Trek Destination: TrekDestination
- Upvote Trek Destination: TrekDestination
	=> Increase votecount for trek destination

	=> UPDATE `trek_destinations` set upvotes = 14 where id = 1;

- Add Iternary
- Update Iternary
- Delete Iternary

Entities:
- User
	- FullName
	- Address
	- Email
	- Phone Number
	- Password

- TrekDestination
	- Title
	- Days
	- Difficulty
	- TotalCost
	- Iternaries
	- Upvotes

- Iternary
	- Title
	- Day
	- StartPlace
	- EndPlace
	- Description
	- Duration
	- Cost

Table Names:
- User
	- id - primaryKey - integer
	- FullName - full_name - varchar
	- Address - address - varchar
	- Email - email - varchar - unique
	- Phone Number - phone_number - varchar - unique
	- Password - password - varchar

- TrekDestination
	- id - PrimaryKey - integer
	- Title - title - varchar
	- Days - days - integer
	- Difficulty - [Level1, Level2, Level3, Level4, Level5] - difficulty - varchar
	- TotalCost - total_cost - integer
	- Upvotes - upvotes - integer

	- User - user_id - ForeignKey - integer

- Iternary
	- id - PrimaryKey - integer
	- Title - title - varchar
	- Day - day - integer
	- StartPlace - start_place - varchar
	- EndPlace - end_place - varchar
	- Description - description - text
	- Duration - duration - varchar
	- Cost - cost - integer

	- TrekDestination - trekdestination_id - ForeignKey - integer

